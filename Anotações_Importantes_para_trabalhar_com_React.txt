Notas importantes para desenvolvimento React:

-Criação de um projeto React
	npx create-react-app <nome da app> --template=typescript
	(npm run start)

-Rotas
	-Instalar o react-router-dom (npm install react-router-dom);
	-Criar o arquivo Routes dentro src;
	-Instalar o componente BrowserModule(npm i --save-dev @types/react-router-dom);
	-Criar a seguinte estrutura no arquivo BrowserModules;
		
const Routes = () =>(
    	<BrowserRouter>
       	 <Header/>
       	 <Switch>
            <Route path="/" exact>
                <Home/>
            </Route>
        </Switch>
        <Switch>
            <Route path="/records" >
                <Records/>
            </Route>
        </Switch>
    </BrowserRouter>
	)

export default Routes;

	-No arquivo app.tsx importar o componente Routes;
	-No componente onde deseja inserir o link colocar a seguinte tag:
	<Link to="/">

- Integração Back/Front React

	-Importar uma lib do React chamada Axios(npm install axios);
	-Importar o componente useEffect(componente que será inicializado quando o componente for instanciado);
	-Importar o componente axios e usar a seguite sintaxe:
	 OBSIMP: BASE_URL e a variavel criada dentro do componente para acessar o backend;
	  	useEffect(()=>{
            	//console.log('componente iniciado')
            	axios.get(`${BASE_URL}/records?linesPerPage=12`)
            	.then(response => console.log("Deu certo"))
        	}, []);
	-Criar um arquivo type.ts com os parametros que vao costar no backend exemplo:

	export type RecordsResponse ={
    		content:RecordItem[];
    		totalPages:Number;
	}

	export type RecordItem = {
    	id:number; 
    	moment: string;
    	name:string;
    	age:number;
    	gameTitle: string;
    	gamePlataform: Plataform;
    	genreName: string
}

export type Plataform = 'XBOX' | 'PC' | 'PLAY'
	
-Após isso utilzar o componente useState da seguinte forma:

const [recordsResponse,setRecordsResponse] = useState<RecordsResponse>();

-Para popular os campos da tabela usar a seguinte estrutura dentro do componente

 {recordsResponse?.content.map(record => (
                        <tr key={record.id}>
                            <td>
                                {record.moment}
                        </td>
                            <td>
                                {record.name}
                        </td>
                            <td>
                                {record.age}
                        </td>
                            <td className="text-secondary">
                                {record.gamePlataform}
                        </td>
                            <td>
                                {record.genreName}
                        </td>
                            <td className="text-primary">
                                {record.gameTitle}
                        </td>
                        </tr>
                    ))}

-Formatar data importar a lib moment(npm install moment);
	-Criar o arquivo helpers.tsx com a seguinte estrutura:

	import moment from 'moment';

	export const formatDate =(date:string) => {
    		return moment(date).format('DD/MM/YYYY HH:mm')
	}

